[versions]
springdoc = "2.6.0"
kotest = "5.9.1"
compose-multiplatform = "1.7.1"

kotlin = "2.1.0"
kotlinx-serialization = "1.6.2"
ksp = "2.1.0-1.0.29"
kotlinCoroutines = "1.9.0"
ktor = "3.0.2"
compose-jetbrains = "1.7.1"
# decompose
decompose = "3.2.2"
# DI
koin_version = "4.0.1-Beta1"
koin_ksp_version = "2.0.0-Beta2"
koin_compose = "4.0.1-Beta1"
dateTime = "0.6.0-RC.2"
konfig = "0.15.1"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }


# Kotlin serialisation version
kotlin_serialization_json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# Coroutines
coroutines_core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
coroutines_test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinCoroutines" }
coroutines_wasm = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-wasm-js", version.ref = "kotlinCoroutines" }

# Ktor
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor_logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }

# Koin
koin_compose = { module = "io.insert-koin:koin-compose", version.ref = "koin_compose" }
koin_core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin_version" }
#koin-core-wasm-js = { module = "io.insert-koin:koin-compose-wasm-js", version.ref = "koin_js" }
koin_annotations = { group = "io.insert-koin", name = "koin-annotations", version.ref = "koin_ksp_version" }
koin_ksp_compiler = { group = "io.insert-koin", name = "koin-ksp-compiler", version.ref = "koin_ksp_version" }
## decompose
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
#dateTime
date-time = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "dateTime" }


[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose-jetbrains" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
konfig = { id = "com.codingfeline.buildkonfig", version.ref = "konfig" }