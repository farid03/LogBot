name: Server deployment

on:
  pull_request_target:
    types:
      - closed
env:
  TARGET_DIR: logbot

jobs:
  deployment:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: staging
    steps:
    - uses: actions/checkout@v4
    - name: clone logbot sources
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.HOST_1 }}
        username: ${{ secrets.USERNAME_1 }}
        key: ${{ secrets.KEY_1 }}
        port: ${{ secrets.PORT_1 }}
        source: "."
        target: ${{ env.TARGET_DIR  }}

    - name: shutdown all applications
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_1 }}
        username: ${{ secrets.USERNAME_1 }}
        key: ${{ secrets.KEY_1 }}
        port: ${{ secrets.PORT_1 }}
        script: |
          cd ${{ env.TARGET_DIR  }}
          ./gradlew --stop
          pkill java
          pwd

    - name: run logbot-auth
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_1 }}
        username: ${{ secrets.USERNAME_1 }}
        key: ${{ secrets.KEY_1 }}
        port: ${{ secrets.PORT_1 }}
        script: |
          cd ${{ env.TARGET_DIR  }}
          nohup ./gradlew :logbot-auth:bootRun --args=' \
            --spring.profiles.active=stage \
            --spring.datasource.url=${{ secrets.POSTGRES_BACKEND_URL }} \
            --spring.datasource.username=${{ secrets.POSTGRES_USERNAME }} \
            --spring.datasource.password=${{ secrets.POSTGRES_PASSWORD }} \
            ' > ./auth-output.log 2>&1 &

    - name: run logbot-server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_1 }}
        username: ${{ secrets.USERNAME_1 }}
        key: ${{ secrets.KEY_1 }}
        port: ${{ secrets.PORT_1 }}
        script: |
          cd ${{ env.TARGET_DIR  }}
          nohup ./gradlew :logbot-server:bootRun --args=' \
            --spring.profiles.active=stage \
            --spring.datasource.url=${{ secrets.POSTGRES_BACKEND_URL }} \
            --spring.datasource.username=${{ secrets.POSTGRES_USERNAME }} \
            --spring.datasource.password=${{ secrets.POSTGRES_PASSWORD }} \
            --spring.kafka.consumer.bootstrap-servers=${{ secrets.KAFKA_BOOTSTRAP_SERVERS }} \
            --spring.kafka.producer.bootstrap-servers=${{ secrets.KAFKA_BOOTSTRAP_SERVERS }} \
            ' > ./server-output.log 2>&1 &